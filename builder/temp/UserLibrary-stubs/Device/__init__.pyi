'''
Stubs generated by PyStubbler version [1.0.8278.32530]
Date: Wednesday, 31 August 2022 18:04

Namespace: UserLibrary.Device

In Assembly: TgcUserLibrary

'''

__all__ = ['Measurements']
from typing import Tuple, Set, Iterable, List, overload, Dict, Callable, Any
from UserLibrary.DataTypes import CallbackEventArgs, GpioEventArgs
from UserLibrary.Device.Measurements import TGCMeasurements



class CallbackHandler:
#Instance variables (non-static)
    ID: int

#EventHandlers
    Handler: Callable[[Any, CallbackEventArgs], None]    # void function(object sender, UserLibrary.DataTypes.CallbackEventArgs args) 

#Class Methods


class InputChangeHandler:
#Instance variables (non-static)
    Channel: int

#EventHandlers
    Handler: Callable[[Any, GpioEventArgs], None]    # void function(object sender, UserLibrary.DataTypes.GpioEventArgs args) 

#Class Methods


class InputsCallbacks:
#Constructors
    def __init__(self): ...

#Properties
    @property
    @Item.setter
    def Item(self, channel: int) -> InputChangeHandler: ...


#Class Methods
    def SubscribeIrq(self, channel: int, handler: Any) -> None: ...



class TgcDevice:
#Properties
    @property
    @Measurement.setter
    def Measurement(self) -> TGCMeasurements: ...

    @property
    @Callbacks.setter
    def Callbacks(self) -> TgcDeviceCallback: ...

    @property
    @Gpio.setter
    def Gpio(self) -> TgcDeviceGpio: ...

    @property
    @Connected.setter
    def Connected(self) -> bool: ...


#Class Methods
    @overload
    def Connect(self) -> bool: ...

    @overload
    def Connect(self, SerialNumber: str) -> bool: ...

    def ConnectWithDialog(self) -> bool: ...

    def Disconnect(self) -> None: ...

    def GetRegisterByAddress(self, address: int) -> int: ...

    def SetRegisterByAddress(self, address: int, value: int) -> bool: ...

    def Unlock(self) -> bool: ...



class TgcDeviceCallback:
#Properties
    @property
    @Item.setter
    def Item(self, ID: int) -> CallbackHandler: ...


#Class Methods
    def SubscribeIrq(self, ID: int, handler: Any) -> None: ...



class TgcDeviceGpio:
#Properties
    @property
    @InputCallbacks.setter
    def InputCallbacks(self) -> InputsCallbacks: ...

    @InputCallbacks.setter
    def InputCallbacks(self, value: InputsCallbacks) -> None: ...


#Class Methods
    def GetInputMode(self, channel: int) -> int: ...

    def SetInputMode(self, channel: int, mode: int) -> bool: ...

    def SetOutput(self, channel: int, mode: int) -> bool: ...


